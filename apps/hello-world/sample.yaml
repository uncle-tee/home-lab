---
# Source: hello-world/charts/helloworld/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: helloworld
  labels:
    helm.sh/chart: helloworld-0.2.1
    app.kubernetes.io/name: helloworld
    app.kubernetes.io/instance: hello-world
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: hello-world/charts/helloworld/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: helloworld
  labels:
    helm.sh/chart: helloworld-0.2.1
    app.kubernetes.io/name: helloworld
    app.kubernetes.io/instance: hello-world
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5678
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: helloworld
    app.kubernetes.io/instance: hello-world
---
# Source: hello-world/charts/helloworld/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld
  labels:
    helm.sh/chart: helloworld-0.2.1
    app.kubernetes.io/name: helloworld
    app.kubernetes.io/instance: hello-world
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: helloworld
      app.kubernetes.io/instance: hello-world
  template:
    metadata:
      labels:
        app.kubernetes.io/name: helloworld
        app.kubernetes.io/instance: hello-world
    spec:
      serviceAccountName: helloworld
      securityContext:
        {}
      containers:
        - name: helloworld
          securityContext:
            {}
          image: "hashicorp/http-echo:0.2.3"
          imagePullPolicy: IfNotPresent
          args:
          - "-text=helloworld !"
          ports:
            - name: http
              containerPort: 5678
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 5678
          readinessProbe:
            httpGet:
              path: /
              port: 5678
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: hello-world/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-world
  labels:
    helm.sh/chart: hello-world-0.1.0
    app.kubernetes.io/name: hello-world
    app.kubernetes.io/instance: hello-world
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    kubernetes.io/ingress.class: traefik
    kubernetes.io/tls-acme: "true"
spec:
  ingressClassName: "traefik"
  tls:
    - hosts:
        - "hello-world.dyekan.com"
      secretName: dyekan.com.tls
  rules:
    - host: "hello-world.dyekan.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hello-world
                port:
                  number: 5678
---
# Source: hello-world/charts/helloworld/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "helloworld-test-connection"
  labels:
    helm.sh/chart: helloworld-0.2.1
    app.kubernetes.io/name: helloworld
    app.kubernetes.io/instance: hello-world
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['helloworld:5678']
  restartPolicy: Never
