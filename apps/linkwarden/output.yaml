---
# Source: app-template/templates/common.yaml
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: linkwarden-config
  labels:
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: linkwarden
    helm.sh/chart: app-template-3.7.3
  namespace: sample
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
  storageClassName: "linkwarden-storage-class"
---
# Source: app-template/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: linkwarden
  labels:
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: linkwarden
    app.kubernetes.io/service: linkwarden
    helm.sh/chart: app-template-3.7.3
  namespace: sample
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/name: linkwarden
---
# Source: app-template/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkwarden
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: linkwarden
    helm.sh/chart: app-template-3.7.3
  namespace: sample
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/name: linkwarden
      app.kubernetes.io/instance: linkwarden
  template:
    metadata:
      labels: 
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: linkwarden
        app.kubernetes.io/name: linkwarden
    spec: 
      enableServiceLinks: false
      serviceAccountName: default
      automountServiceAccountToken: true
      hostIPC: false
      hostNetwork: false
      hostPID: false
      dnsPolicy: ClusterFirst
      containers: 
        - env:
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                key: uri
                name: linkwarden
          - name: NEXTAUTH_SECRET
            valueFrom:
              secretKeyRef:
                key: encryptionKey
                name: linkwarden
          image: ghcr.io/linkwarden/linkwarden:2.10.0
          imagePullPolicy: IfNotPresent
          name: main
          securityContext:
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            runAsUser: 1000
          volumeMounts:
          - mountPath: /data/data
            name: config
      volumes: 
        - name: config
          persistentVolumeClaim:
            claimName: linkwarden-config
---
# Source: app-template/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: linkwarden
  labels:
    app.kubernetes.io/instance: linkwarden
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: linkwarden
    helm.sh/chart: app-template-3.7.3
  namespace: sample
spec:
  rules:
    - host: "bookmark.dyekan.com"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: linkwarden
                port:
                  number: 80
